#include <iostream>
#include <cmath>

using namespace std;

void Left_Rec(double a, double b, unsigned short n);
void Right_Rec(double a, double b, unsigned short n);
void Trapeziya(double a, double b, unsigned short n);
void Sympson_Homer(double a, double b, unsigned short n);

int main() {
    double a, b;
    unsigned short n;
    cin >> n >> a >> b;

    Left_Rec(a, b, n);
    Right_Rec(a, b, n);
    Trapeziya(a, b, n);
    Sympson_Homer(a, b, n);

    return 0;

}

void Left_Rec(double a, double b, unsigned short n) {
    double h = (b - a) / n;
    double sum = 0.0f;

    for (int i = 0; i <= n - 1; i++) {
        sum += h * sqrt(a + i * h);
    }

    cout << sum << endl;
}

void Right_Rec(double a, double b, unsigned short n) {
    double h = (b - a) / n;
    double sum = 0.0f;

    for (int i = 1; i <= n; i++) {
        sum += h * sqrt(a + i * h);
    }

    cout << sum << endl;
}

void Trapeziya(double a, double b, unsigned short n) {
    double h = (b - a) / n;
    double sum = sqrt(a) + sqrt(b);

    for (int i = 0; i <= n - 1; i++) {
        sum += 2 * sqrt(a + i * h);
    }

    sum *= h / 2;
    cout << sum << endl;
}

void Sympson_Homer(double a, double b, unsigned short n) {
    double h = (b - a) / n;
    double sum = sqrt(a) + sqrt(b);
    short k;

    for (int i = 0; i <= n - 1; i++) {
        k = 2 + 2 * (i % 2);
        sum += k * sqrt(a + i * h);
    }

    sum *= h / 3;
    cout << sum << endl;
 }
